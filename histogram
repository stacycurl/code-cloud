#!/bin/sh

single_histogram() {
  tr -cs '[:alpha:]' '\n' | sort | sed -e '/^.\{0,1\}$/d' | uniq -c | sort -bg
}

histogram() {
  text_files() {
    find $* -type f -print | xargs file | grep ASCII | cut -d: -f1
  }

  combine() {
    awk '{ count[$2] += $1 } END { for(elem in count) print count[elem], elem }' $* | sort -bg | remove_stop_words
  }

  remove_stop_words() {
    egrep -v `cat $STOP_FILE | tr '\n' '|' | tr ' ' '|' | sed -e 's/|$//'`
  }

  for i in `text_files $*`; do cat $i | single_histogram; done | combine
}

git_additions() {
  git diff --diff-filter AM $1 $2 | grep "^+[^+]" | single_histogram
}

code_cloud() {
  NAME="$1.html"
  shift
  cat code-cloud-pre.html > $NAME
  histogram $* | sed -e 's/\ /, text: "/' | sed -e 's/^/      {size: /' | sed -e 's/$/"},/' >> $NAME
  cat code-cloud-post.html >> $NAME

  open $NAME
}

display_help() {
cat << HELP
  code-cloud [<options>] <name> location [locations*]
    generate a code cloud <name>.html with data drawn from one or more locations (files or directories)
  histogram [<options> location [locations*]
    generate a word count histogram with data drawn from one or more locations

  options
    -h, --help:         display this help
    -s, --stops <file>: specify a file that contains stop words
HELP
}

process_options() {
  STOP_FILE=$DIR/stop-words

  while true; do
    case "${1-""}" in
      -h | --help) display_help; exit 0;;
      -s | --stops) STOP_FILE=$2; shift 2;;
      -- ) shift; break;;
      *  ) break;;
    esac
  done

  ARGS=$*
}

LC_CTYPE=C
DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
COMMAND=`basename $0 | tr - _`

process_options $*
eval "$COMMAND $ARGS"
